apiVersion: v1
kind: Service
metadata:
  name: mk-buying-ssr-service
spec:
  selector:
    app: mk-buying-ssr-app
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 5132
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mk-buying-ssr-app
spec:
  progressDeadlineSeconds: 600
  selector:
    matchLabels:
      app: mk-buying-ssr-app
  replicas: 1
  template:
    metadata:
      labels:
        app: mk-buying-ssr-app
    spec:
      containers:
      - name: mk-buying-ssr-app
        image: arnobdev/mk-buying-ssr
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /api
            port: api-port
            scheme: HTTP
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        ports:
          - containerPort: 5132
            name: api-port
            protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /api
            port: api-port
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 500m
            memory: 500Mi
          requests:
            cpu: 300m
            memory: 300Mi
      imagePullSecrets:
      - name: regcred 
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mk-buying-ssr-ingress
  annotations:
    certmanager.k8s.io/cluster-issuer: letsencrypt-staging
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  rules:
  - host: mk-buying.com
    http:
      paths:
       - path: /
         pathType: Prefix
         backend:
            service:
               name: mk-buying-ssr-service
               port:
                  number: 80
